<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ctrls="clr-namespace:PP.Wpf.Controls"
                    xmlns:attach="clr-namespace:PP.Wpf.Controls.Attach"
                    xmlns:cvts="clr-namespace:PP.Wpf.Converters">

    <Style x:Key="PP.Styles.TextBox" TargetType="{x:Type TextBoxBase}">
        <Setter Property="Padding" Value="6 3" />
        <Setter Property="Background" Value="{DynamicResource PP.Brushes.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PP.Brushes.Black50}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="attach:BorderElement.HoverBorderBrush" Value="{DynamicResource PP.Brushes.Themes70}" />
        <Setter Property="attach:BorderElement.FocusBorderBrush" Value="{DynamicResource PP.Brushes.Themes}" />
        <Setter Property="Foreground" Value="{DynamicResource PP.Brushes.Foreground}" />
        <Setter Property="CaretBrush" Value="{Binding Foreground,RelativeSource={RelativeSource Self}}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="{TemplateBinding attach:BorderElement.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ctrls:SimplePanel>
                            <TextBlock x:Name="placeholder" Text="{TemplateBinding attach:TextElement.Placeholder}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"
                                           Visibility="{Binding Text,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static cvts:StringToVisibilityConverter.EmptyToVisible}}"
                                           Opacity="0.6" IsHitTestVisible="False" />
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False"
                                          HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </ctrls:SimplePanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsReadOnly" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{Binding Path=(attach:BorderElement.HoverBorderBrush),RelativeSource={RelativeSource Self}}" />
                            <Setter TargetName="placeholder" Property="Opacity" Value="0.3" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin" Value="True" />
                                <Condition Property="IsReadOnly" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{Binding Path=(attach:BorderElement.FocusBorderBrush),RelativeSource={RelativeSource Self}}" />
                            <Setter TargetName="placeholder" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>
                        <Trigger Property="attach:TextElement.IsError" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource Gnt.Brushes.Warning}" />
                            <Setter TargetName="placeholder" Property="Visibility" Value="Visible" />
                            <Setter TargetName="placeholder" Property="Opacity" Value="0.6" />
                            <Setter TargetName="placeholder" Property="Foreground" Value="{DynamicResource Gnt.Brushes.Warning}" />
                            <Setter TargetName="placeholder" Property="Text" Value="{Binding Path=(attach:TextElement.ErrorText),RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource PP.Styles.TextBox}" />

    <Style x:Key="PP.Styles.TextBox.SelectedOnly" TargetType="{x:Type TextBoxBase}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <AdornerDecorator x:Name="PART_ContentHost" Focusable="False" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PP.Styles.TextBox.SelectedOnly.ScrollAble" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Style="{x:Null}" Focusable="False" HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PP.Styles.TextBox.SelectedOnly.ScrollAble.ToolTip" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="ToolTip" Value="{Binding Text,RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Style="{x:Null}" Focusable="False" HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}" />
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ScrollableWidth,ElementName=PART_ContentHost}" Value="0" />
                                <Condition Binding="{Binding ScrollableHeight,ElementName=PART_ContentHost}" Value="0" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="ToolTip" Value="{x:Null}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>