<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PP.Wpf</name>
    </assembly>
    <members>
        <member name="M:PP.Wpf.Behaviors.TextBeatingBehavior.CreateStoryboard">
            <summary>
            创建动画
            </summary>
        </member>
        <member name="P:PP.Wpf.Behaviors.TextBeatingBehavior.Interval">
            <summary>
            一个跳动的时间，单位毫秒
            </summary>
        </member>
        <member name="T:PP.Wpf.Behaviors.TextBoxFocusBehavior">
            <summary>
            文本框获取焦点
            </summary>
        </member>
        <member name="P:PP.Wpf.Behaviors.TextBoxFocusBehavior.IsSelectAll">
            <summary>
            具有焦点时是否全选
            </summary>
        </member>
        <member name="T:PP.Wpf.Behaviors.TextBoxVerifyBehavior">
            <summary>
            文本框输入前验证
            </summary>
        </member>
        <member name="P:PP.Wpf.Behaviors.TextBoxVerifyBehavior.Regex">
            <summary>
            预输入正则表达式(筛选不可输入的字符)
            </summary>
        </member>
        <member name="P:PP.Wpf.Behaviors.TextBoxVerifyBehavior.IsNumber">
            <summary>
            是否数字
            </summary>
        </member>
        <member name="P:PP.Wpf.Behaviors.TextBoxVerifyBehavior.MaxValue">
            <summary>
            数值的最大值
            </summary>
        </member>
        <member name="P:PP.Wpf.Behaviors.TextBoxVerifyBehavior.MinValue">
            <summary>
            数值的最小值
            </summary>
        </member>
        <member name="P:PP.Wpf.Behaviors.TextBoxVerifyBehavior.StopInput">
            <summary>
            如果不符合条件，是否阻止输入
            </summary>
        </member>
        <member name="P:PP.Wpf.Behaviors.TextBoxVerifyBehavior.ErrorText">
            <summary>
            错误提示
            </summary>
        </member>
        <member name="P:PP.Wpf.Behaviors.TextBoxVerifyBehavior.EmptyErrorText">
            <summary>
            空文本时错误提示
            </summary>
        </member>
        <member name="T:PP.Wpf.Controls.Arc">
            <summary>
            圆弧
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.Arc.RadianStart">
            <summary>
            开始弧度
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.Arc.Radian">
            <summary>
            弧度
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.Arc.IsSector">
            <summary>
            是否扇形
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.Arc.IsAutoAnimate">
            <summary>
            自动使用动画
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Arc.CoordMap(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            极坐标转换
            </summary>
            <param name="x">圆心x</param>
            <param name="y">圆心y</param>
            <param name="r">半径</param>
            <param name="a">弧度</param>
            <returns></returns>
        </member>
        <member name="T:PP.Wpf.Controls.AspectScale">
            <summary>
            纵横比
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.AspectScale.X">
            <summary>
            宽比例
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.AspectScale.Y">
            <summary>
            高比例
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.AspectScale.Mode">
            <summary>
            测量模式
            </summary>
        </member>
        <member name="T:PP.Wpf.Controls.Attach.BackgroundElement">
            <summary>
            背景元素
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.BackgroundElement.BackgroundProperty">
            <summary>
            鼠标悬浮时背景颜色
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.BackgroundElement.GetBackground(System.Windows.DependencyObject)">
            <summary>
            获取鼠标悬浮时背景颜色
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.BackgroundElement.SetBackground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置鼠标悬浮时背景颜色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.BackgroundElement.HoverBackgroundProperty">
            <summary>
            鼠标悬浮时背景颜色
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.BackgroundElement.GetHoverBackground(System.Windows.DependencyObject)">
            <summary>
            获取鼠标悬浮时背景颜色
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.BackgroundElement.SetHoverBackground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置鼠标悬浮时背景颜色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.BackgroundElement.PressedBackgroundProperty">
            <summary>
            鼠标按压时背景颜色
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.BackgroundElement.GetPressedBackground(System.Windows.DependencyObject)">
            <summary>
            获取鼠标按压时背景颜色
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.BackgroundElement.SetPressedBackground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置鼠标按压时背景颜色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.BackgroundElement.SelectedBackgroundProperty">
            <summary>
            选中时背景颜色
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.BackgroundElement.GetSelectedBackground(System.Windows.DependencyObject)">
            <summary>
            获取选中时背景颜色
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.BackgroundElement.SetSelectedBackground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置选中时背景颜色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.BackgroundElement.FocusBackgroundProperty">
            <summary>
            聚焦时背景颜色
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.BackgroundElement.GetFocusBackground(System.Windows.DependencyObject)">
            <summary>
            获取聚焦时背景颜色
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.BackgroundElement.SetFocusBackground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置聚焦时背景颜色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="T:PP.Wpf.Controls.Attach.BorderElement">
            <summary>
            边框元素
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.BorderElement.BorderBrushProperty">
            <summary>
            鼠标悬停时边框颜色
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.BorderElement.GetBorderBrush(System.Windows.DependencyObject)">
            <summary>
            获取鼠标悬停时边框颜色
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.BorderElement.SetBorderBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置鼠标悬停时边框颜色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.BorderElement.HoverBorderBrushProperty">
            <summary>
            鼠标悬停时边框颜色
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.BorderElement.GetHoverBorderBrush(System.Windows.DependencyObject)">
            <summary>
            获取鼠标悬停时边框颜色
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.BorderElement.SetHoverBorderBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置鼠标悬停时边框颜色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.BorderElement.PressedBorderBrushProperty">
            <summary>
            鼠标按压时边框颜色
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.BorderElement.GetPressedBorderBrush(System.Windows.DependencyObject)">
            <summary>
            获取鼠标按压时边框颜色
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.BorderElement.SetPressedBorderBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置鼠标按压时边框颜色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.BorderElement.SelectedBorderBrushProperty">
            <summary>
            选中时边框颜色
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.BorderElement.GetSelectedBorderBrush(System.Windows.DependencyObject)">
            <summary>
            获取选中时边框颜色
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.BorderElement.SetSelectedBorderBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置选中时边框颜色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.BorderElement.FocusBorderBrushProperty">
            <summary>
            聚焦时边框颜色
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.BorderElement.GetFocusBorderBrush(System.Windows.DependencyObject)">
            <summary>
            聚焦时边框颜色
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.BorderElement.SetFocusBorderBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            聚焦时边框颜色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.BorderElement.CornerRadiusProperty">
            <summary>
            圆角弧度
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.BorderElement.GetCornerRadius(System.Windows.DependencyObject)">
            <summary>
            获取圆角弧度
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.BorderElement.SetCornerRadius(System.Windows.DependencyObject,System.Windows.CornerRadius)">
            <summary>
            设置圆角弧度
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="T:PP.Wpf.Controls.Attach.ForegroundElement">
            <summary>
            字体元素
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.ForegroundElement.ForegroundProperty">
            <summary>
            字体颜色
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.ForegroundElement.GetForeground(System.Windows.DependencyObject)">
            <summary>
            获取字体颜色
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.ForegroundElement.SetForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置字体颜色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.ForegroundElement.HoverForegroundProperty">
            <summary>
            鼠标悬浮时字体颜色
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.ForegroundElement.GetHoverForeground(System.Windows.DependencyObject)">
            <summary>
            获取鼠标悬浮时字体颜色
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.ForegroundElement.SetHoverForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置鼠标悬浮时字体颜色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.ForegroundElement.PressedForegroundProperty">
            <summary>
            鼠标按下时字体颜色
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.ForegroundElement.GetPressedForeground(System.Windows.DependencyObject)">
            <summary>
            获取鼠标按下时字体颜色
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.ForegroundElement.SetPressedForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置鼠标按下时字体颜色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.ForegroundElement.SelectedForegroundProperty">
            <summary>
            选中时字体颜色
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.ForegroundElement.GetSelectedForeground(System.Windows.DependencyObject)">
            <summary>
            获取选中时字体颜色
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.ForegroundElement.SetSelectedForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置选中时字体颜色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="T:PP.Wpf.Controls.Attach.IconElement">
            <summary>
            图标元素
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.IconElement.GeometryProperty">
            <summary>
            矢量图标
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.IconElement.GetGeometry(System.Windows.DependencyObject)">
            <summary>
            获取矢量图标
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.IconElement.SetGeometry(System.Windows.DependencyObject,System.Windows.Media.Geometry)">
            <summary>
            设置矢量图标
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.IconElement.GeometrySelectedProperty">
            <summary>
            选择时矢量图标
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.IconElement.GetGeometrySelected(System.Windows.DependencyObject)">
            <summary>
            获取选择时矢量图标
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.IconElement.SetGeometrySelected(System.Windows.DependencyObject,System.Windows.Media.Geometry)">
            <summary>
            设置选择时矢量图标
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.IconElement.BrushProperty">
            <summary>
            画刷
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.IconElement.GetBrush(System.Windows.DependencyObject)">
            <summary>
            获取画刷
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.IconElement.SetBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置画刷
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.IconElement.ImageProperty">
            <summary>
            图像图标
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.IconElement.SetImage(System.Windows.DependencyObject,System.Windows.Media.ImageSource)">
            <summary>
            设置图像图标
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.IconElement.GetImage(System.Windows.DependencyObject)">
            <summary>
            获取图像图标
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.IconElement.ImageSelectedProperty">
            <summary>
            选中时图像图标
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.IconElement.GetImageSelected(System.Windows.DependencyObject)">
            <summary>
            获取选中时图像图标
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.IconElement.SetImageSelected(System.Windows.DependencyObject,System.Windows.Media.ImageSource)">
            <summary>
            设置选中时图像图标
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.IconElement.HoverImageProperty">
            <summary>
            鼠标悬浮时图像图标
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.IconElement.GetHoverImage(System.Windows.DependencyObject)">
            <summary>
            获取鼠标悬浮时图像图标
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.IconElement.SetHoverImage(System.Windows.DependencyObject,System.Windows.Media.ImageSource)">
            <summary>
            设置鼠标悬浮时图像图标
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.IconElement.PressedImageProperty">
            <summary>
            鼠标按压时图像图标
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.IconElement.GetPressedImage(System.Windows.DependencyObject)">
            <summary>
            获取鼠标按压时图像图标
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.IconElement.SetPressedImage(System.Windows.DependencyObject,System.Windows.Media.ImageSource)">
            <summary>
            设置鼠标按压时图像图标
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.IconElement.DisabledImageProperty">
            <summary>
            不可用时图像图标
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.IconElement.GetDisabledImage(System.Windows.DependencyObject)">
            <summary>
            获取不可用时图像图标
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.IconElement.SetDisabledImage(System.Windows.DependencyObject,System.Windows.Media.ImageSource)">
            <summary>
            设置不可用时图像图标
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.IconElement.WidthProperty">
            <summary>
            图标宽度
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.IconElement.GetWidth(System.Windows.DependencyObject)">
            <summary>
            获取图标宽度
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.IconElement.SetWidth(System.Windows.DependencyObject,System.Double)">
            <summary>
            设置图标宽度
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.IconElement.HeightProperty">
            <summary>
            图标高度
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.IconElement.GetHeight(System.Windows.DependencyObject)">
            <summary>
            获取图标高度
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.IconElement.SetHeight(System.Windows.DependencyObject,System.Double)">
            <summary>
            设置图标高度
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.IconElement.MarginProperty">
            <summary>
            图标内边距
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.IconElement.GetMargin(System.Windows.DependencyObject)">
            <summary>
            获取图标外边距
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.IconElement.SetMargin(System.Windows.DependencyObject,System.Windows.Thickness)">
            <summary>
            设置图标外边距
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.IconElement.StretchProperty">
            <summary>
            平铺模式
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.IconElement.GetStretch(System.Windows.DependencyObject)">
            <summary>
            获取平铺模式
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.IconElement.SetStretch(System.Windows.DependencyObject,System.Windows.Media.Stretch)">
            <summary>
            设置平铺模式
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.IconElement.IsSelectedProperty">
            <summary>
            是否选中
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.IconElement.GetIsSelected(System.Windows.DependencyObject)">
            <summary>
            获取是否选中
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.IconElement.SetIsSelected(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            设置是否选中
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="T:PP.Wpf.Controls.Attach.PopupElement">
            <summary>
            Popup弹窗元素
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.PopupElement.MinDropDownHeightProperty">
            <summary>
            最小高度
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.PopupElement.GetMinDropDownHeight(System.Windows.DependencyObject)">
            <summary>
            获取最小高度
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.PopupElement.SetMinDropDownHeight(System.Windows.DependencyObject,System.Double)">
            <summary>
            设置最小高度
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.PopupElement.MaxDropDownHeightProperty">
            <summary>
            最大高度
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.PopupElement.GetMaxDropDownHeight(System.Windows.DependencyObject)">
            <summary>
            获取最大高度
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.PopupElement.SetMaxDropDownHeight(System.Windows.DependencyObject,System.Double)">
            <summary>
            设置最大高度
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="T:PP.Wpf.Controls.Attach.ScrollBarElement">
            <summary>
            滚动条元素
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.ScrollBarElement.BackgroundProperty">
            <summary>
            滚动条背景颜色
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.ScrollBarElement.GetBackground(System.Windows.DependencyObject)">
            <summary>
            获取滚动条背景颜色
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.ScrollBarElement.SetBackground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置滚动条背景颜色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.ScrollBarElement.ThumbFillProperty">
            <summary>
            拖动块填充颜色
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.ScrollBarElement.GetThumbFill(System.Windows.DependencyObject)">
            <summary>
            获取拖动块填充颜色
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.ScrollBarElement.SetThumbFill(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置拖动块填充颜色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.ScrollBarElement.ThumbHoverFillProperty">
            <summary>
            拖动块鼠标悬浮时填充颜色
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.ScrollBarElement.GetThumbHoverFill(System.Windows.DependencyObject)">
            <summary>
            获取拖动块鼠标悬浮时填充颜色
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.ScrollBarElement.SetThumbHoverFill(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置拖动块鼠标悬浮时填充颜色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.ScrollBarElement.ThumbPressFillProperty">
            <summary>
            拖动块鼠标按压时填充颜色
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.ScrollBarElement.GetThumbPressFill(System.Windows.DependencyObject)">
            <summary>
            获取拖动块鼠标按压时填充颜色
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.ScrollBarElement.SetThumbPressFill(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置拖动块鼠标按压时填充颜色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.ScrollBarElement.ThumbWidthProperty">
            <summary>
            拖动块宽度（横向时指高度）
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.ScrollBarElement.GetThumbWidth(System.Windows.DependencyObject)">
            <summary>
            获取拖动块宽度（横向时指高度）
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.ScrollBarElement.SetThumbWidth(System.Windows.DependencyObject,System.Double)">
            <summary>
            设置拖动块宽度（横向时指高度）
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.ScrollBarElement.HoverThumbWidthProperty">
            <summary>
            鼠标悬浮时拖动块宽度（横向时指高度）
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.ScrollBarElement.GetHoverThumbWidth(System.Windows.DependencyObject)">
            <summary>
            获取鼠标悬浮时拖动块宽度（横向时指高度）
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.ScrollBarElement.SetHoverThumbWidth(System.Windows.DependencyObject,System.Double)">
            <summary>
            设置鼠标悬浮时拖动块宽度（横向时指高度）
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.ScrollBarElement.ThumbRadiusProperty">
            <summary>
            拖动块圆角大小
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.ScrollBarElement.GetThumbRadius(System.Windows.DependencyObject)">
            <summary>
            获取拖动块圆角大小
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.ScrollBarElement.SetThumbRadius(System.Windows.DependencyObject,System.Double)">
            <summary>
            设置拖动块圆角大小
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.ScrollBarElement.HoverThumbRadiusProperty">
            <summary>
            鼠标悬浮时拖动块圆角大小
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.ScrollBarElement.GetHoverThumbRadius(System.Windows.DependencyObject)">
            <summary>
            获取鼠标悬浮时拖动块圆角大小
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.ScrollBarElement.SetHoverThumbRadius(System.Windows.DependencyObject,System.Double)">
            <summary>
            设置鼠标悬浮时拖动块圆角大小
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.ScrollBarElement.ThumbMinLengthProperty">
            <summary>
            拖动块最小高度（横向时指宽度）
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.ScrollBarElement.GetThumbMinLength(System.Windows.DependencyObject)">
            <summary>
            获取拖动块最小高度（横向时指宽度）
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.ScrollBarElement.SetThumbMinLength(System.Windows.DependencyObject,System.Double)">
            <summary>
            设置拖动块最小高度（横向时指宽度）
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="T:PP.Wpf.Controls.Attach.TextElement">
            <summary>
            文本元素
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.TextElement.PlaceholderProperty">
            <summary>
            占位符
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.TextElement.GetPlaceholder(System.Windows.DependencyObject)">
            <summary>
            获取占位符
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.TextElement.SetPlaceholder(System.Windows.DependencyObject,System.String)">
            <summary>
            设置占位符
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.TextElement.AttachPasswordBoxProperty">
            <summary>
            是否监听PasswordBox的PasswordChanged事件
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.TextElement.GetAttachPasswordBox(System.Windows.DependencyObject)">
            <summary>
            获取是否监听PasswordBox的PasswordChanged事件
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.TextElement.SetAttachPasswordBox(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            设置是否监听PasswordBox的PasswordChanged事件
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.TextElement.PasswordProperty">
            <summary>
            密码
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.TextElement.GetPassword(System.Windows.DependencyObject)">
            <summary>
            获取密码
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.TextElement.SetPassword(System.Windows.DependencyObject,System.String)">
            <summary>
            设置密码
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.TextElement.IsErrorProperty">
            <summary>
            是否输入错误
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.TextElement.GetIsError(System.Windows.DependencyObject)">
            <summary>
            获取是否输入错误
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.TextElement.SetIsError(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            设置是否输入错误
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.TextElement.ErrorTextProperty">
            <summary>
            错误提示
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.TextElement.GetErrorText(System.Windows.DependencyObject)">
            <summary>
            获取错误提示
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.TextElement.SetErrorText(System.Windows.DependencyObject,System.String)">
            <summary>
            设置错误提示
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="T:PP.Wpf.Controls.Attach.WindowElement">
            <summary>
            窗体元素
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.WindowElement.TitleHeightProperty">
            <summary>
            标题栏高度
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.WindowElement.GetTitleHeight(System.Windows.DependencyObject)">
            <summary>
            获取标题栏高度
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.WindowElement.SetTitleHeight(System.Windows.DependencyObject,System.Double)">
            <summary>
            设置
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.WindowElement.TitleBackgroundProperty">
            <summary>
            标题栏背景色
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.WindowElement.GetTitleBackground(System.Windows.DependencyObject)">
            <summary>
            获取标题栏背景色
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.WindowElement.SetTitleBackground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置标题栏背景色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.WindowElement.TitleForegroundProperty">
            <summary>
            标题栏前景色
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.WindowElement.GetTitleForeground(System.Windows.DependencyObject)">
            <summary>
            获取标题栏前景色
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.WindowElement.SetTitleForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置标题栏前景色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.WindowElement.NoActiveTitleBackgroundProperty">
            <summary>
            NoActive标题栏背景色
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.WindowElement.GetNoActiveTitleBackground(System.Windows.DependencyObject)">
            <summary>
            获取NoActive标题栏背景色
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.WindowElement.SetNoActiveTitleBackground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置NoActive标题栏背景色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.WindowElement.NoActiveBorderBrushProperty">
            <summary>
            NoActive边框颜色
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.WindowElement.GetNoActiveBorderBrush(System.Windows.DependencyObject)">
            <summary>
            获取NoActive边框颜色
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.WindowElement.SetNoActiveBorderBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置NoActive边框颜色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.WindowElement.WindowButtonWidthProperty">
            <summary>
            窗口按钮的宽度
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.WindowElement.GetWindowButtonWidth(System.Windows.DependencyObject)">
            <summary>
            获取窗口按钮的宽度
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.WindowElement.SetWindowButtonWidth(System.Windows.DependencyObject,System.Double)">
            <summary>
            设置窗口按钮的宽度
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.WindowElement.TitleFontsizeProperty">
            <summary>
            标题栏字体大小
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.WindowElement.GetTitleFontsize(System.Windows.DependencyObject)">
            <summary>
            获取标题栏字体大小
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.WindowElement.SetTitleFontsize(System.Windows.DependencyObject,System.Double)">
            <summary>
            设置标题栏字体大小
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.WindowElement.TitlePaddingProperty">
            <summary>
            标题栏边距
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.WindowElement.GetTitlePadding(System.Windows.DependencyObject)">
            <summary>
            获取标题栏边距
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.WindowElement.SetTitlePadding(System.Windows.DependencyObject,System.Windows.Thickness)">
            <summary>
            设置标题栏边距
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="F:PP.Wpf.Controls.Attach.WindowElement.KeepMaximizedProperty">
            <summary>
            保持最大化（窗口只能最小化和最大化，不能正常化）
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.WindowElement.GetKeepMaximized(System.Windows.DependencyObject)">
            <summary>
            获取标题栏边距
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.Attach.WindowElement.SetKeepMaximized(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            设置标题栏边距
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="T:PP.Wpf.Controls.ChromeWindow">
            <summary>
            使用WindowChorme创建的自定义窗体
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.ChromeWindow.LayoutMarginPropertyKey">
            <summary>
            最大化时，内容要设置的外边距
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.ChromeWindow.LayoutMarginProperty">
            <summary>
            最大化时，内容要设置的外边距
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.ChromeWindow.LayoutMargin">
            <summary>
            最大化时，内容要设置的外边距
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.ChromeWindow.TitleContentProperty">
            <summary>
            标题内容
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.ChromeWindow.TitleContent">
            <summary>
            标题内容
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.ChromeWindow.TitleContentTemplateProperty">
            <summary>
            标题内容数据模板
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.ChromeWindow.TitleContentTemplate">
            <summary>
            标题内容数据模板
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.ChromeWindow.#ctor">
            <summary>
            使用WindowChorme创建的自定义窗体
            </summary>
        </member>
        <member name="T:PP.Wpf.Controls.CornerClip">
            <summary>
            圆角裁剪
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.CornerClip.CornerRadiusProperty">
            <summary>
            圆角弧度
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.CornerClip.CornerRadius">
            <summary>
            圆角弧度
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.CornerClip.#ctor">
            <summary>
            圆角裁剪
            </summary>
        </member>
        <member name="T:PP.Wpf.Controls.DateTimePicker">
            <summary>
            时间日期选择器
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimePicker.SelectedDateProperty">
            <summary>
            选择的时间
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.DateTimePicker.SelectedDate">
            <summary>
            选择的时间
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimePicker.TextProperty">
            <summary>
            显示文本
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.DateTimePicker.Text">
            <summary>
            显示文本
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimePicker.DateTimeFormatProperty">
            <summary>
            日期时间显示格式
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.DateTimePicker.DateTimeFormat">
            <summary>
            日期时间显示格式
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimePicker.HoursPropertyKey">
            <summary>
            小时列表
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimePicker.HoursProperty">
            <summary>
            小时列表
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.DateTimePicker.Hours">
            <summary>
            小时列表
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimePicker.HourProperty">
            <summary>
            小时
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.DateTimePicker.Hour">
            <summary>
            小时
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimePicker.MinutesPropertyKey">
            <summary>
            分钟列表
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimePicker.MinutesProperty">
            <summary>
            分钟列表
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.DateTimePicker.Minutes">
            <summary>
            分钟列表
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimePicker.MinuteProperty">
            <summary>
            分钟
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.DateTimePicker.Minute">
            <summary>
            分钟
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimePicker.SecondsPropertyKey">
            <summary>
            秒列表
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimePicker.SecondsProperty">
            <summary>
            秒列表
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.DateTimePicker.Seconds">
            <summary>
            秒列表
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimePicker.SecondProperty">
            <summary>
            秒
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.DateTimePicker.Second">
            <summary>
            秒
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimePicker.PrevTextPropertyKey">
            <summary>
            日期预览
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimePicker.PrevTextProperty">
            <summary>
            日期预览
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.DateTimePicker.PrevText">
            <summary>
            日期预览
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.DateTimePicker.IsReadOnly">
            <summary>
            只读
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.DateTimePicker.#ctor">
            <summary>
            时间日期选择器
            </summary>
        </member>
        <member name="T:PP.Wpf.Controls.DateTimeScopePicker">
            <summary>
            时间日期范围选择控件
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimeScopePicker.BeginTimeProperty">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.DateTimeScopePicker.BeginTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimeScopePicker.EndTimeProperty">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.DateTimeScopePicker.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimeScopePicker.TextProperty">
            <summary>
            显示文本
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.DateTimeScopePicker.Text">
            <summary>
            显示文本
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimeScopePicker.DateTimeFormatProperty">
            <summary>
            日期时间显示格式
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.DateTimeScopePicker.DateTimeFormat">
            <summary>
            日期时间显示格式
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimeScopePicker.HoursPropertyKey">
            <summary>
            小时列表
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimeScopePicker.HoursProperty">
            <summary>
            小时列表
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.DateTimeScopePicker.Hours">
            <summary>
            小时列表
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimeScopePicker.MinutesPropertyKey">
            <summary>
            分钟列表
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimeScopePicker.MinutesProperty">
            <summary>
            分钟列表
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.DateTimeScopePicker.Minutes">
            <summary>
            分钟列表
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimeScopePicker.SecondsPropertyKey">
            <summary>
            秒列表
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimeScopePicker.SecondsProperty">
            <summary>
            秒列表
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.DateTimeScopePicker.Seconds">
            <summary>
            秒列表
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimeScopePicker.BeginHourProperty">
            <summary>
            小时（开始时间）
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.DateTimeScopePicker.BeginHour">
            <summary>
            小时（开始时间）
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimeScopePicker.BeginMinuteProperty">
            <summary>
            分钟（开始时间）
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.DateTimeScopePicker.BeginMinute">
            <summary>
            分钟（开始时间）
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimeScopePicker.BeginSecondProperty">
            <summary>
            秒（开始时间）
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.DateTimeScopePicker.BeginSecond">
            <summary>
            秒（开始时间）
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimeScopePicker.EndHourProperty">
            <summary>
            小时（结束时间）
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.DateTimeScopePicker.EndHour">
            <summary>
            小时（结束时间）
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimeScopePicker.EndMinuteProperty">
            <summary>
            分钟（结束时间）
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.DateTimeScopePicker.EndMinute">
            <summary>
            分钟（结束时间）
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimeScopePicker.EndSecondProperty">
            <summary>
            秒（结束时间）
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.DateTimeScopePicker.EndSecond">
            <summary>
            秒（结束时间）
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimeScopePicker.PrevTextPropertyKey">
            <summary>
            日期预览
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.DateTimeScopePicker.PrevTextProperty">
            <summary>
            日期预览
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.DateTimeScopePicker.PrevText">
            <summary>
            日期预览
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.DateTimeScopePicker.IsReadOnly">
            <summary>
            只读
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.DateTimeScopePicker.#ctor">
            <summary>
            时间日期范围选择器
            </summary>
        </member>
        <member name="T:PP.Wpf.Controls.ListBoxDragSelectViewer">
            <summary>
            鼠标拖动选择ListBox选项
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.ListBoxDragSelectViewer.FillProperty">
            <summary>
            拖动区域填充颜色
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.ListBoxDragSelectViewer.Fill">
            <summary>
            拖动区域填充颜色
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.ListBoxDragSelectViewer.StrokeThicknessProperty">
            <summary>
            拖动区域描边大小
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.ListBoxDragSelectViewer.StrokeThickness">
            <summary>
            拖动区域描边大小
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.ListBoxDragSelectViewer.StrokeProperty">
            <summary>
            拖动区域描边颜色
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.ListBoxDragSelectViewer.Stroke">
            <summary>
            拖动区域描边颜色
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.ListBoxDragSelectViewer.IsDraggingPropertyKey">
            <summary>
            控件具有逻辑焦点和捕获鼠标并按下鼠标左键
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.ListBoxDragSelectViewer.IsDraggingProperty">
            <summary>
            控件具有逻辑焦点和捕获鼠标并按下鼠标左键
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.ListBoxDragSelectViewer.IsDragging">
            <summary>
            控件具有逻辑焦点和捕获鼠标并按下鼠标左键
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.ListBoxDragSelectViewer.DragRectPropertyKey">
            <summary>
            拖动区域
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.ListBoxDragSelectViewer.DragRectProperty">
            <summary>
            拖动区域
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.ListBoxDragSelectViewer.DragRect">
            <summary>
            拖动区域
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.ListBoxDragSelectViewer.#ctor">
            <summary>
            鼠标拖动选择ListBox选项
            </summary>
        </member>
        <member name="T:PP.Wpf.Controls.ListPager">
            <summary>
            列表分页控件
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.ListPager.Source">
            <summary>
            数据源
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.ListPager.PageSize">
            <summary>
            一页大小
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.ListPager.PageIndex">
            <summary>
            第几页
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.ListPager.PageCount">
            <summary>
            页数
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.ListPager.TotalCount">
            <summary>
            条目数
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.ListPager.DisplaySource">
            <summary>
            展示的数据源
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.ListPager.PageNumbers">
            <summary>
            页码
            </summary>
        </member>
        <member name="T:PP.Wpf.Controls.ListPager.PageNumber">
            <summary>
            页码
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.ListPager.PageNumber.#ctor(System.Int32,System.Int32)">
            <summary>
            页码
            </summary>
            <param name="no">页码</param>
            <param name="status">0:普通页|1:当前页|2:向前省略|3:向后省略</param>
        </member>
        <member name="P:PP.Wpf.Controls.ListPager.PageNumber.No">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.ListPager.PageNumber.Status">
            <summary>
            0:普通页|1:当前页|2:向前省略|3:向后省略
            </summary>
        </member>
        <member name="T:PP.Wpf.Controls.Pager">
            <summary>
            分页控件
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.Pager.TotalCount">
            <summary>
            条目数
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.Pager.PageSize">
            <summary>
            一页大小
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.Pager.PageIndex">
            <summary>
            第几页
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.Pager.PageCount">
            <summary>
            页数
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.Pager.PageNumbers">
            <summary>
            页码
            </summary>
        </member>
        <member name="T:PP.Wpf.Controls.ProgressRingWin10">
            <summary>
            Win10加载动画
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.ProgressRingWin10.#ctor">
            <summary>
            Win10加载动画
            </summary>
        </member>
        <member name="T:PP.Wpf.Controls.RunningBlock">
            <summary>
            滚动块
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.RunningBlock.SpaceProperty">
            <summary>
            间距
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.RunningBlock.Space">
            <summary>
            间距
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.RunningBlock.SpeedProperty">
            <summary>
            滚动速度（每秒wpf单位数）
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.RunningBlock.Speed">
            <summary>
            滚动速度（每秒wpf单位数）
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.RunningBlock.DirectionProperty">
            <summary>
            滚动方向
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.RunningBlock.Direction">
            <summary>
            滚动方向
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.RunningBlock.#ctor">
            <summary>
            滚动块
            </summary>
        </member>
        <member name="T:PP.Wpf.Controls.RunningDirection">
            <summary>
            滚动方向
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.RunningDirection.RightToLeft">
            <summary>
            从右往左
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.RunningDirection.LeftToRight">
            <summary>
            从左往右
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.RunningDirection.BottomToTop">
            <summary>
            从下往上
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.RunningDirection.TopToBottom">
            <summary>
            从上往下
            </summary>
        </member>
        <member name="T:PP.Wpf.Controls.RunningText">
            <summary>
            滚动文字
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.RunningText.TextProperty">
            <summary>
            滚动的文字
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.RunningText.Text">
            <summary>
            滚动的文字
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.RunningText.SpaceProperty">
            <summary>
            间距
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.RunningText.Space">
            <summary>
            间距
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.RunningText.SpeedProperty">
            <summary>
            滚动速度（每秒wpf单位数）
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.RunningText.Speed">
            <summary>
            滚动速度（每秒wpf单位数）
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.RunningText.DirectionProperty">
            <summary>
            滚动方向
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.RunningText.Direction">
            <summary>
            滚动方向
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.RunningText.#ctor">
            <summary>
            滚动文字
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.RunningText.BeginUpdate">
            <summary>
            多个事件同时触发时，仅执行一次
            </summary>
        </member>
        <member name="T:PP.Wpf.Controls.SimpleDateTimePicker">
            <summary>
            时间日期选择器
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.SimpleDateTimePicker.SelectedDateProperty">
            <summary>
            选择的时间
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.SimpleDateTimePicker.SelectedDate">
            <summary>
            选择的时间
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.SimpleDateTimePicker.TextProperty">
            <summary>
            显示文本
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.SimpleDateTimePicker.Text">
            <summary>
            显示文本
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.SimpleDateTimePicker.DateTimeFormatProperty">
            <summary>
            日期时间显示格式
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.SimpleDateTimePicker.DateTimeFormat">
            <summary>
            日期时间显示格式
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.SimpleDateTimePicker.YearsPropertyKey">
            <summary>
            年列表
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.SimpleDateTimePicker.YearsProperty">
            <summary>
            年列表
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.SimpleDateTimePicker.Years">
            <summary>
            年列表
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.SimpleDateTimePicker.YearProperty">
            <summary>
            年
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.SimpleDateTimePicker.Year">
            <summary>
            年
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.SimpleDateTimePicker.MonthsPropertyKey">
            <summary>
            月列表
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.SimpleDateTimePicker.MonthsProperty">
            <summary>
            月列表
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.SimpleDateTimePicker.Months">
            <summary>
            月列表
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.SimpleDateTimePicker.MonthProperty">
            <summary>
            月
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.SimpleDateTimePicker.Month">
            <summary>
            月
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.SimpleDateTimePicker.DaysPropertyKey">
            <summary>
            日列表
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.SimpleDateTimePicker.DaysProperty">
            <summary>
            日列表
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.SimpleDateTimePicker.Days">
            <summary>
            日列表
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.SimpleDateTimePicker.DayProperty">
            <summary>
            日
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.SimpleDateTimePicker.Day">
            <summary>
            日
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.SimpleDateTimePicker.HoursPropertyKey">
            <summary>
            小时列表
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.SimpleDateTimePicker.HoursProperty">
            <summary>
            小时列表
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.SimpleDateTimePicker.Hours">
            <summary>
            小时列表
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.SimpleDateTimePicker.HourProperty">
            <summary>
            小时
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.SimpleDateTimePicker.Hour">
            <summary>
            小时
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.SimpleDateTimePicker.MinutesPropertyKey">
            <summary>
            分钟列表
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.SimpleDateTimePicker.MinutesProperty">
            <summary>
            分钟列表
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.SimpleDateTimePicker.Minutes">
            <summary>
            分钟列表
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.SimpleDateTimePicker.MinuteProperty">
            <summary>
            分钟
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.SimpleDateTimePicker.Minute">
            <summary>
            分钟
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.SimpleDateTimePicker.SecondsPropertyKey">
            <summary>
            秒列表
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.SimpleDateTimePicker.SecondsProperty">
            <summary>
            秒列表
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.SimpleDateTimePicker.Seconds">
            <summary>
            秒列表
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.SimpleDateTimePicker.SecondProperty">
            <summary>
            秒
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.SimpleDateTimePicker.Second">
            <summary>
            秒
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.SimpleDateTimePicker.PrevTextPropertyKey">
            <summary>
            日期预览
            </summary>
        </member>
        <member name="F:PP.Wpf.Controls.SimpleDateTimePicker.PrevTextProperty">
            <summary>
            日期预览
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.SimpleDateTimePicker.PrevText">
            <summary>
            日期预览
            </summary>
        </member>
        <member name="P:PP.Wpf.Controls.SimpleDateTimePicker.IsReadOnly">
            <summary>
            只读
            </summary>
        </member>
        <member name="M:PP.Wpf.Controls.SimpleDateTimePicker.#ctor">
            <summary>
            时间日期选择器
            </summary>
        </member>
        <member name="T:PP.Wpf.Controls.SimplePanel">
            <summary>
            实现没有网络线的Grid
            </summary>
        </member>
        <member name="T:PP.Wpf.Converters.BooleanReverseConverter">
            <summary>
            BooleanReverseConverter
            </summary>
        </member>
        <member name="P:PP.Wpf.Converters.BooleanReverseConverter.Instance">
            <summary>
            反转Boolean实例
            </summary>
        </member>
        <member name="T:PP.Wpf.Converters.BooleanToVisibilityConverter">
            <summary>
            BooleanToVisibilityConverter
            </summary>
        </member>
        <member name="P:PP.Wpf.Converters.BooleanToVisibilityConverter.FalseValue">
            <summary>
            False时Visibility值
            </summary>
        </member>
        <member name="P:PP.Wpf.Converters.BooleanToVisibilityConverter.TrueValue">
            <summary>
            True时Visibility值
            </summary>
        </member>
        <member name="P:PP.Wpf.Converters.BooleanToVisibilityConverter.FalseToCollapsed">
            <summary>
            False时Visibility=Collapsed
            </summary>
        </member>
        <member name="P:PP.Wpf.Converters.BooleanToVisibilityConverter.FalseToHidden">
            <summary>
            False时Visibility=Hidden
            </summary>
        </member>
        <member name="P:PP.Wpf.Converters.BooleanToVisibilityConverter.TrueToCollapsed">
            <summary>
            True时Visibility=Collapsed
            </summary>
        </member>
        <member name="P:PP.Wpf.Converters.BooleanToVisibilityConverter.TrueToHidden">
            <summary>
            True时Visibility=Hidden
            </summary>
        </member>
        <member name="T:PP.Wpf.Converters.GenericTypeConverter">
            <summary>
            通用类型转换器
            </summary>
        </member>
        <member name="P:PP.Wpf.Converters.GenericTypeConverter.Alias">
            <summary>
            正向键值对字典
            </summary>
        </member>
        <member name="P:PP.Wpf.Converters.GenericTypeConverter.BackAlias">
            <summary>
            反向键值对字典
            </summary>
        </member>
        <member name="M:PP.Wpf.Converters.GenericTypeConverter.ParseAliasByStr(System.String)">
            <summary>
            解析转换规则
            </summary>
            <param name="aliasStr">规则字符串</param>
        </member>
        <member name="T:PP.Wpf.Converters.MathMultiConverter">
            <summary>
            数学运算转换器
            </summary>
        </member>
        <member name="T:PP.Wpf.Converters.MathMultiConverter.MathOperators">
            <summary>
            数学运算符
            </summary>
        </member>
        <member name="F:PP.Wpf.Converters.MathMultiConverter.MathOperators.Add">
            <summary>
            加
            </summary>
        </member>
        <member name="F:PP.Wpf.Converters.MathMultiConverter.MathOperators.Minus">
            <summary>
            减
            </summary>
        </member>
        <member name="F:PP.Wpf.Converters.MathMultiConverter.MathOperators.Multiply">
            <summary>
            乘
            </summary>
        </member>
        <member name="F:PP.Wpf.Converters.MathMultiConverter.MathOperators.Except">
            <summary>
            除
            </summary>
        </member>
        <member name="F:PP.Wpf.Converters.MathMultiConverter.MathOperators.Compare">
            <summary>
            比较
            </summary>
        </member>
        <member name="P:PP.Wpf.Converters.MathMultiConverter.MathOperator">
            <summary>
            数学运算符
            </summary>
        </member>
        <member name="P:PP.Wpf.Converters.MathMultiConverter.Compare">
            <summary>
            反转Boolean实例
            </summary>
        </member>
        <member name="T:PP.Wpf.Converters.NullToVisibilityConverter">
            <summary>
            NullToVisibilityConverter
            </summary>
        </member>
        <member name="P:PP.Wpf.Converters.NullToVisibilityConverter.NullToCollapsed">
            <summary>
            Null时Visibility=Collapsed
            </summary>
        </member>
        <member name="P:PP.Wpf.Converters.NullToVisibilityConverter.NullToHidden">
            <summary>
            Null时Visibility=Hidden
            </summary>
        </member>
        <member name="P:PP.Wpf.Converters.NullToVisibilityConverter.NullValue">
            <summary>
            Null时Visibility值
            </summary>
        </member>
        <member name="T:PP.Wpf.Converters.StirngToBooleanConverter">
            <summary>
            是否空字符转换器
            </summary>
        </member>
        <member name="P:PP.Wpf.Converters.StirngToBooleanConverter.IsNullOrEmpty">
            <summary>
            空字符串时设置Visibility=Collapsed
            </summary>
        </member>
        <member name="T:PP.Wpf.Converters.StringToVisibilityConverter">
            <summary>
            StringToVisibilityConverter
            </summary>
        </member>
        <member name="P:PP.Wpf.Converters.StringToVisibilityConverter.EmptyValue">
            <summary>
            空字符串时的Visibility
            </summary>
        </member>
        <member name="P:PP.Wpf.Converters.StringToVisibilityConverter.NotEmptyValue">
            <summary>
            非空字符串时的Visibility
            </summary>
        </member>
        <member name="P:PP.Wpf.Converters.StringToVisibilityConverter.EmptyToCollapsed">
            <summary>
            空字符串时设置Visibility=Collapsed
            </summary>
        </member>
        <member name="P:PP.Wpf.Converters.StringToVisibilityConverter.EmptyToHidden">
            <summary>
            空字符串时设置Visibility=Hidden
            </summary>
        </member>
        <member name="P:PP.Wpf.Converters.StringToVisibilityConverter.EmptyToVisible">
            <summary>
            空字符串时设置Visibility=Visible
            </summary>
        </member>
        <member name="T:PP.Wpf.Converters.ThicknessNoTopConverter">
            <summary>
            ThicknessNoTopConverter
            </summary>
        </member>
        <member name="T:PP.Wpf.Extensions.ObjectExtension">
            <summary>
            Object类型的扩展方法
            </summary>
        </member>
        <member name="M:PP.Wpf.Extensions.ObjectExtension.TryChangeType``1(System.Object,``0@,``0)">
            <summary>
            尝试转换类型，若失败，则返回默认值
            警告:因包含try catch,且考虑类型多,效率极低
            </summary>
        </member>
        <member name="T:PP.Wpf.Extensions.UIElementExtension">
            <summary>
            UIElement类扩展方法
            </summary>
        </member>
        <member name="M:PP.Wpf.Extensions.UIElementExtension.ExecuteWhenLoaded(System.Windows.FrameworkElement,System.Action)">
            <summary>
            Loaded的时候执行，如果IsLoaded=True，立即执行
            </summary>
            <param name="ele"></param>
            <param name="action"></param>
        </member>
        <member name="M:PP.Wpf.Extensions.UIElementExtension.ExecuteWhenUnloaded(System.Windows.FrameworkElement,System.Action)">
            <summary>
            Unloaded的时候执行
            </summary>
            <param name="ele"></param>
            <param name="action"></param>
        </member>
        <member name="M:PP.Wpf.Extensions.UIElementExtension.ExecuteWhenClosed(System.Windows.Window,System.Action)">
            <summary>
            窗口关闭时执行
            </summary>
            <param name="win"></param>
            <param name="action"></param>
        </member>
        <member name="M:PP.Wpf.Extensions.UIElementExtension.FindParent``1(System.Windows.DependencyObject,System.Func{``0,System.Boolean})">
            <summary>
            根据类型，查找父节点
            </summary>
            <typeparam name="T">查找对象类型</typeparam>
            <param name="d">查找源点</param>
            <param name="filter">筛选条件</param>
            <returns>查找对象</returns>
        </member>
        <member name="M:PP.Wpf.Extensions.UIElementExtension.FindChildrenByType``1(System.Windows.DependencyObject,System.Collections.Generic.List{``0}@,System.Func{``0,System.Boolean})">
            <summary>
            根据Type查找所有子节点
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="root">根节点</param>
            <param name="list">查找结果</param>
            <param name="filter">筛选条件</param>
        </member>
        <member name="M:PP.Wpf.Extensions.UIElementExtension.FindChildByType``1(System.Windows.DependencyObject,System.Func{``0,System.Boolean})">
            <summary>
            根据Type查找子节点
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="root">根节点</param>
            <param name="filter">筛选条件</param>
            <returns>查找结果</returns>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
